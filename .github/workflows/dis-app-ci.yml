name: DIS App CI/CD

on:
  push:
    branches: [ "main", "adding-cypress-to-ci-file" ]
  pull_request:
    branches: [ "main", "adding-cypress-to-ci-file" ]
  workflow_dispatch:

jobs:
  # build_dis_app:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v4

  #   - name: Set up Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: 20
  #       cache: 'npm'

  #   - name: Install dependencies
  #     run: npm ci

  #   - name: Log in to GitHub Container Registry
  #     uses: docker/login-action@v3
  #     with:
  #       registry: ghcr.io
  #       username: ${{ secrets.GHCR_USERNAME }}
  #       password: ${{ secrets.GHCR_TOKEN }}

  #   - name: Build and tag Docker image
  #     run: |
  #       docker build . \
  #         -t ghcr.io/nishan-silva/dis-app:latest \
  #         -t ghcr.io/nishan-silva/dis-app:${{ github.sha }}

  #   - name: Push Docker image
  #     run: |
  #       docker push ghcr.io/nishan-silva/dis-app:latest
  #       docker push ghcr.io/nishan-silva/dis-app:${{ github.sha }}
        
 end-to-end-test:
    runs-on: ubuntu-latest
    container:
      image: cypress/included:11.0.0
    env:
      DIS_BASE_URL: ${{ secrets.DIS_BASE_URL }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm install

      - name: Run Cypress Tests
        run: npx cypress run

      - name: Move Allure Reports
        run: |
          mkdir -p allure-results
          mv allure-results allure-results/cypress

      - name: Upload Cypress Test Results
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results/
          retention-days: 5

allure_report:
    runs-on: ubuntu-latest
    needs: end-to-end-test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Cypress Test Results
        uses: actions/download-artifact@v3
        with:
          name: allure-results
          path: allure-results/

      - name: Install Allure CLI
        run: npm install -g allure-commandline

      - name: Generate Allure Report
        run: allure generate allure-results --output allure-report

      - name: Upload Allure Report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: allure-report/
          retention-days: 5

report:
    runs-on: ubuntu-latest
    needs: allure_report
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Allure Report
        uses: actions/download-artifact@v3
        with:
          name: allure-report
          path: public/

      - name: List Report Files
        run: ls -lh public/

      - name: Upload Final Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: final-report
          path: public/
          retention-days: 5